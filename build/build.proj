<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="TryPublishSigned" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <NuGet>nuget.exe</NuGet>
  </PropertyGroup>

  <Target Name="TryPublishSigned" DependsOnTargets="CheckForNewVersions">
    <Message Text="$(NewVersionsExist)" />
    <CallTarget Targets="PublishSigned" Condition=" '$(ShouldPublishFlurlToNuGet)' == 'True' OR  '$(ShouldPublishFlurlHttpToNuGet)' == 'True' " />
  </Target>

  <Target Name="PublishSigned" DependsOnTargets="RetrieveLatestVersions">
    <!-- Sign assemblies -->
    <Exec Command="packages\Brutal.Dev.StrongNameSigner\tools\StrongNameSigner.Console.exe -k $(DOWNLOADSECUREFILE_SECUREFILEPATH) -in &quot;packages\flurl|packages\flurl.http&quot;" WorkingDirectory=".." />
    <Exec Command="cmd /c DEL /S *.unsigned" WorkingDirectory="..\packages" />

    <!-- Repackage -->
    <MakeDir Directories="..\artifacts" />
    <XmlPoke Namespaces="&lt;Namespace Prefix='nuget' Uri='http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'/&gt;"
             XmlInputPath="..\packages\Flurl\Flurl.nuspec"
             Query="//nuget:id | //nuget:title"
             Value="Flurl.Signed">
    </XmlPoke>
    <XmlPoke Namespaces="&lt;Namespace Prefix='nuget' Uri='http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'/&gt;"
             XmlInputPath="..\packages\Flurl\Flurl.nuspec"
             Query="//nuget:projectUrl"
             Value="https://github.com/ellenfieldn/Flurl.Signed">
    </XmlPoke>
    <XmlPoke Namespaces="&lt;Namespace Prefix='nuget' Uri='http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'/&gt;"
             XmlInputPath="..\packages\Flurl\Flurl.nuspec"
             Query="//nuget:description"
             Value="This is the Flurl package, repackaged with strongly named assemblies. See https://flurl.io/ for the official project.">
    </XmlPoke>
    <XmlPoke Namespaces="&lt;Namespace Prefix='nuget' Uri='http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'/&gt;"
             XmlInputPath="..\packages\Flurl.Http\Flurl.Http.nuspec"
             Query="//nuget:id | //nuget:title"
             Value="Flurl.Http.Signed">
    </XmlPoke>
    <XmlPoke Namespaces="&lt;Namespace Prefix='nuget' Uri='http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'/&gt;"
             XmlInputPath="..\packages\Flurl.Http\Flurl.Http.nuspec"
             Query="//nuget:projectUrl"
             Value="https://github.com/ellenfieldn/Flurl.Signed">
    </XmlPoke>
    <XmlPoke Namespaces="&lt;Namespace Prefix='nuget' Uri='http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'/&gt;"
             XmlInputPath="..\packages\Flurl.Http\Flurl.Http.nuspec"
             Query="//nuget:description"
             Value="This is the Flurl.Http package, repackaged with strongly named assemblies. See https://flurl.io/ for the official project.">
    </XmlPoke>
    <XmlPoke Namespaces="&lt;Namespace Prefix='nuget' Uri='http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'/&gt;"
             XmlInputPath="..\packages\Flurl.Http\Flurl.Http.nuspec"
             Query="//nuget:dependency[@id='Flurl']/@version/../@id"
             Value="Flurl.Signed">
    </XmlPoke>

    <Exec Command="cmd /c DEL /S .signature.p7s" WorkingDirectory="..\packages" />
    
    <Exec Command="$(NuGet) pack packages\Flurl\Flurl.nuspec -OutputDirectory artifacts" WorkingDirectory=".." />
    <Exec Command="$(NuGet) pack packages\Flurl.Http\Flurl.Http.nuspec -OutputDirectory artifacts" WorkingDirectory=".." />

    <!-- Publish -->
    <Exec Command="$(NuGet) push Flurl.Signed.$(FlurlVersion).nupkg -ApiKey $(NugetApiKey) -Source https://api.nuget.org/v3/index.json" WorkingDirectory="..\artifacts"
          Condition=" '$(ShouldPublishFlurlToNuGet)' == 'True' "/>
    <Exec Command="$(NuGet) push Flurl.Http.Signed.$(FlurlHttpVersion).nupkg -ApiKey $(NugetApiKey) -Source https://api.nuget.org/v3/index.json" WorkingDirectory="..\artifacts"
          Condition=" '$(ShouldPublishFlurlHttpToNuGet)' == 'True' "/>
  </Target>

  <Target Name="CheckForNewVersions" DependsOnTargets="RetrieveLatestVersions">
    <Exec Command="@powershell -NoProfile -ExecutionPolicy unrestricted -File check-nuget-version-exists.ps1 Flurl.Signed $(FlurlVersion)" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="ShouldPublishFlurlToNuGet" />
    </Exec>
    <Exec Command="@powershell -NoProfile -ExecutionPolicy unrestricted -File check-nuget-version-exists.ps1 Flurl.Http.Signed $(FlurlHttpVersion)" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="ShouldPublishFlurlHttpToNuGet" />
    </Exec>
  </Target>

  <Target Name="RetrieveLatestVersions" DependsOnTargets="DownloadNuGet">
    <RemoveDir Directories="..\packages" />
    <Exec Command="$(NuGet) install Brutal.Dev.StrongNameSigner -Version 1.8.0 -ExcludeVersion -OutputDirectory packages" WorkingDirectory=".." />
    <Exec Command="$(NuGet) install Flurl -ExcludeVersion -OutputDirectory packages -PackageSaveMode nuspec" WorkingDirectory=".." />
    <Exec Command="$(NuGet) install Flurl.Http -ExcludeVersion -OutputDirectory packages -PackageSaveMode nuspec" WorkingDirectory=".." />
    <XmlPeek Namespaces="&lt;Namespace Prefix='nuget' Uri='http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'/&gt;"
             XmlInputPath="..\packages\Flurl\Flurl.nuspec"
             Query="//nuget:version/text()">
      <Output TaskParameter="Result" PropertyName="FlurlVersion" />
    </XmlPeek>
    <XmlPeek Namespaces="&lt;Namespace Prefix='nuget' Uri='http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd'/&gt;"
             XmlInputPath="..\packages\Flurl.Http\Flurl.Http.nuspec"
             Query="//nuget:version/text()">
      <Output TaskParameter="Result" PropertyName="FlurlHttpVersion" />
    </XmlPeek>
  </Target>

  <Target Name="DownloadNuGet" Condition="!Exists('$(NuGet)')">
    <MakeDir Directories="$(LocalAppData)\NuGet" />
    <Exec Command="@powershell -NoProfile -ExecutionPolicy unrestricted -Command &quot;$ProgressPreference = 'SilentlyContinue'; Invoke-WebRequest 'https://dist.nuget.org/win-x86-commandline/v4.6.2/nuget.exe' -OutFile '$(NuGet)'&quot;" />
  </Target>

</Project>
